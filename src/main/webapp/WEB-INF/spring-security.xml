<!-- 
	spring-security.xml : spring security 관련 설정 파일
-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <!-- 
		auto-config : 기본 로그인페이지/ HTTP 기본인증 / 로그아웃기능등을 제공
		use-expressions : SpEL 을 사용한다는 의미(intercept-url를 사용하겠다는 의미)
		intercept-url : pattern, 과 access 값을 통해 해당하는 url접근시 필요한 사용자 권한 체크
		  - access 종류 : 1.isAuthenticated() : 로그인된 사용자
		                 2. isAnonymous() : 로그인되지 않은 사용자
		                 3. permitAll : 모든 사용자
		                 4. hasRole('ROLE명') : ROLE에 해당하는 특정 유저
		                 5. hasAnyRole('ROLE명','ROLE명','ROLE명') : ROLE에 해당하는 특정 다수 유저
	 -->

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin" access="hasRole('1')" />
        
        <!-- access denied page -->
        <!-- 
			access-denied-handler : 권한에 맞지 않는 유저가 접근시 출력할 페이지 설정
		 -->
        
        <access-denied-handler error-page="/403" />
        
        
       <!-- 
		login-page : 로그인 페이지 설정
		default-target-url : 로그인 성공시 이동 페이지 설정
		authentication-failure-url : 로그인 실패시 이동 페이지 설정
		username-parameter : 로그인페이지에서 입력 받는 사용자 id 값
		password-parameter : 로그인페이지에서 입력 받는 사용자 Password 값
		logout-success-url : 로그아웃 성공시 이동 페이지 설정
	 	-->
         <form-login 
            login-page="/login" 
            default-target-url="/welcome" 
            authentication-failure-url="/login?error" 
            username-parameter="account_id"
            password-parameter="account_password" />
        <logout logout-success-url="/login?logout"  />
        <!-- enable csrf protection -->
        <!-- csrf 설정 할 시 필요한 태그 -->
        <csrf/>
    </http>

    <!-- Select users and user_roles from database -->
     <!-- 
		authentication-manager : 데이터베이스에서 시큐리티를 통해 입력된 유저정보와 권한을 체크
		users-by-username-query : id,password,enabled 가 필수로 출력되어야함
		authorities-by-username-query : id,role이 필수로 출력되어야함
		
	 	-->
    <authentication-manager>
      <authentication-provider>
        <jdbc-user-service data-source-ref="dataSource"
          users-by-username-query=
            "select account_id, CONVERT(AES_DECRYPT(UNHEX(account_password), 'code') using utf8) as account_password, account_delflag from `account` where account_id=?"
          authorities-by-username-query=
            "select account_id, account_authority from `account` where account_id=?" />
      </authentication-provider>
    </authentication-manager>

</beans:beans>